#   =======================================================================
#
# Copyright (C) 2018, Hisilicon Technologies Co., Ltd. All Rights Reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#   1 Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#
#   2 Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#
#   3 Neither the names of the copyright holders nor the names of the
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#   =======================================================================
#

'''
Generated by the protocol buffer compiler.  DO NOT EDIT!
source: facial_recognition_message.proto
'''
import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='facial_recognition_message.proto',
  package='ascend.presenter.facial_recognition',
  syntax='proto3',
  serialized_pb=_b('\n facial_recognition_message.proto\x12#ascend.presenter.facial_recognition\"^\n\x0e\x43ommonResponse\x12;\n\x03ret\x18\x01 \x01(\x0e\x32..ascend.presenter.facial_recognition.ErrorCode\x12\x0f\n\x07message\x18\x02 \x01(\t\"\'\n\x0bRegisterApp\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\"=\n\x03\x42ox\x12\x0c\n\x04lt_x\x18\x01 \x01(\r\x12\x0c\n\x04lt_y\x18\x02 \x01(\r\x12\x0c\n\x04rb_x\x18\x03 \x01(\r\x12\x0c\n\x04rb_y\x18\x04 \x01(\r\"T\n\x0b\x46\x61\x63\x65\x46\x65\x61ture\x12\x35\n\x03\x62ox\x18\x01 \x01(\x0b\x32(.ascend.presenter.facial_recognition.Box\x12\x0e\n\x06vector\x18\x02 \x03(\x02\"%\n\x08\x46\x61\x63\x65Info\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05image\x18\x02 \x01(\x0c\"\xa2\x01\n\nFaceResult\x12\n\n\x02id\x18\x01 \x01(\t\x12\x45\n\x08response\x18\x02 \x01(\x0b\x32\x33.ascend.presenter.facial_recognition.CommonResponse\x12\x41\n\x07\x66\x65\x61ture\x18\x03 \x03(\x0b\x32\x30.ascend.presenter.facial_recognition.FaceFeature\"]\n\tFrameInfo\x12\r\n\x05image\x18\x01 \x01(\x0c\x12\x41\n\x07\x66\x65\x61ture\x18\x02 \x03(\x0b\x32\x30.ascend.presenter.facial_recognition.FaceFeature*\x7f\n\tErrorCode\x12\x0e\n\nkErrorNone\x10\x00\x12\x1a\n\x16kErrorAppRegisterExist\x10\x01\x12\x19\n\x15kErrorAppRegisterType\x10\x02\x12\x1a\n\x16kErrorAppRegisterLimit\x10\x03\x12\x0f\n\x0bkErrorOther\x10\x05\x62\x06proto3')
)

_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='ascend.presenter.facial_recognition.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kErrorNone', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterExist', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterType', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterLimit', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorOther', index=4, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=658,
  serialized_end=785,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
kErrorNone = 0
kErrorAppRegisterExist = 1
kErrorAppRegisterType = 2
kErrorAppRegisterLimit = 3
kErrorOther = 5



_COMMONRESPONSE = _descriptor.Descriptor(
  name='CommonResponse',
  full_name='ascend.presenter.facial_recognition.CommonResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ret', full_name='ascend.presenter.facial_recognition.CommonResponse.ret', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='ascend.presenter.facial_recognition.CommonResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=167,
)


_REGISTERAPP = _descriptor.Descriptor(
  name='RegisterApp',
  full_name='ascend.presenter.facial_recognition.RegisterApp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ascend.presenter.facial_recognition.RegisterApp.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='ascend.presenter.facial_recognition.RegisterApp.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=169,
  serialized_end=208,
)


_BOX = _descriptor.Descriptor(
  name='Box',
  full_name='ascend.presenter.facial_recognition.Box',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='lt_x', full_name='ascend.presenter.facial_recognition.Box.lt_x', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lt_y', full_name='ascend.presenter.facial_recognition.Box.lt_y', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rb_x', full_name='ascend.presenter.facial_recognition.Box.rb_x', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rb_y', full_name='ascend.presenter.facial_recognition.Box.rb_y', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=271,
)


_FACEFEATURE = _descriptor.Descriptor(
  name='FaceFeature',
  full_name='ascend.presenter.facial_recognition.FaceFeature',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='box', full_name='ascend.presenter.facial_recognition.FaceFeature.box', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vector', full_name='ascend.presenter.facial_recognition.FaceFeature.vector', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=273,
  serialized_end=357,
)


_FACEINFO = _descriptor.Descriptor(
  name='FaceInfo',
  full_name='ascend.presenter.facial_recognition.FaceInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ascend.presenter.facial_recognition.FaceInfo.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='ascend.presenter.facial_recognition.FaceInfo.image', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=359,
  serialized_end=396,
)


_FACERESULT = _descriptor.Descriptor(
  name='FaceResult',
  full_name='ascend.presenter.facial_recognition.FaceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ascend.presenter.facial_recognition.FaceResult.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='response', full_name='ascend.presenter.facial_recognition.FaceResult.response', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='feature', full_name='ascend.presenter.facial_recognition.FaceResult.feature', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=561,
)


_FRAMEINFO = _descriptor.Descriptor(
  name='FrameInfo',
  full_name='ascend.presenter.facial_recognition.FrameInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image', full_name='ascend.presenter.facial_recognition.FrameInfo.image', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='feature', full_name='ascend.presenter.facial_recognition.FrameInfo.feature', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=563,
  serialized_end=656,
)

_COMMONRESPONSE.fields_by_name['ret'].enum_type = _ERRORCODE
_FACEFEATURE.fields_by_name['box'].message_type = _BOX
_FACERESULT.fields_by_name['response'].message_type = _COMMONRESPONSE
_FACERESULT.fields_by_name['feature'].message_type = _FACEFEATURE
_FRAMEINFO.fields_by_name['feature'].message_type = _FACEFEATURE
DESCRIPTOR.message_types_by_name['CommonResponse'] = _COMMONRESPONSE
DESCRIPTOR.message_types_by_name['RegisterApp'] = _REGISTERAPP
DESCRIPTOR.message_types_by_name['Box'] = _BOX
DESCRIPTOR.message_types_by_name['FaceFeature'] = _FACEFEATURE
DESCRIPTOR.message_types_by_name['FaceInfo'] = _FACEINFO
DESCRIPTOR.message_types_by_name['FaceResult'] = _FACERESULT
DESCRIPTOR.message_types_by_name['FrameInfo'] = _FRAMEINFO
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CommonResponse = _reflection.GeneratedProtocolMessageType('CommonResponse', (_message.Message,), dict(
  DESCRIPTOR = _COMMONRESPONSE,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.CommonResponse)
  ))
_sym_db.RegisterMessage(CommonResponse)

RegisterApp = _reflection.GeneratedProtocolMessageType('RegisterApp', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERAPP,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.RegisterApp)
  ))
_sym_db.RegisterMessage(RegisterApp)

Box = _reflection.GeneratedProtocolMessageType('Box', (_message.Message,), dict(
  DESCRIPTOR = _BOX,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.Box)
  ))
_sym_db.RegisterMessage(Box)

FaceFeature = _reflection.GeneratedProtocolMessageType('FaceFeature', (_message.Message,), dict(
  DESCRIPTOR = _FACEFEATURE,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.FaceFeature)
  ))
_sym_db.RegisterMessage(FaceFeature)

FaceInfo = _reflection.GeneratedProtocolMessageType('FaceInfo', (_message.Message,), dict(
  DESCRIPTOR = _FACEINFO,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.FaceInfo)
  ))
_sym_db.RegisterMessage(FaceInfo)

FaceResult = _reflection.GeneratedProtocolMessageType('FaceResult', (_message.Message,), dict(
  DESCRIPTOR = _FACERESULT,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.FaceResult)
  ))
_sym_db.RegisterMessage(FaceResult)

FrameInfo = _reflection.GeneratedProtocolMessageType('FrameInfo', (_message.Message,), dict(
  DESCRIPTOR = _FRAMEINFO,
  __module__ = 'facial_recognition_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.facial_recognition.FrameInfo)
  ))
_sym_db.RegisterMessage(FrameInfo)


# @@protoc_insertion_point(module_scope)
