// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: presenter_message.proto

#include "presenter_message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_presenter_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Coordinate_presenter_5fmessage_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_presenter_5fmessage_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rectangle_Attr_presenter_5fmessage_2eproto;
namespace ascend {
namespace presenter {
namespace proto {
class OpenChannelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpenChannelRequest> _instance;
} _OpenChannelRequest_default_instance_;
class OpenChannelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OpenChannelResponse> _instance;
} _OpenChannelResponse_default_instance_;
class HeartbeatMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HeartbeatMessage> _instance;
} _HeartbeatMessage_default_instance_;
class CoordinateDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Coordinate> _instance;
} _Coordinate_default_instance_;
class Rectangle_AttrDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Rectangle_Attr> _instance;
} _Rectangle_Attr_default_instance_;
class PresentImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresentImageRequest> _instance;
} _PresentImageRequest_default_instance_;
class PresentImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PresentImageResponse> _instance;
} _PresentImageResponse_default_instance_;
}  // namespace proto
}  // namespace presenter
}  // namespace ascend
static void InitDefaultsscc_info_Coordinate_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_Coordinate_default_instance_;
    new (ptr) ::ascend::presenter::proto::Coordinate();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::Coordinate::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Coordinate_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Coordinate_presenter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_HeartbeatMessage_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_HeartbeatMessage_default_instance_;
    new (ptr) ::ascend::presenter::proto::HeartbeatMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::HeartbeatMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HeartbeatMessage_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HeartbeatMessage_presenter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_OpenChannelRequest_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_OpenChannelRequest_default_instance_;
    new (ptr) ::ascend::presenter::proto::OpenChannelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::OpenChannelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpenChannelRequest_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OpenChannelRequest_presenter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_OpenChannelResponse_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_OpenChannelResponse_default_instance_;
    new (ptr) ::ascend::presenter::proto::OpenChannelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::OpenChannelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OpenChannelResponse_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OpenChannelResponse_presenter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_PresentImageRequest_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_PresentImageRequest_default_instance_;
    new (ptr) ::ascend::presenter::proto::PresentImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::PresentImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PresentImageRequest_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PresentImageRequest_presenter_5fmessage_2eproto}, {
      &scc_info_Rectangle_Attr_presenter_5fmessage_2eproto.base,}};

static void InitDefaultsscc_info_PresentImageResponse_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_PresentImageResponse_default_instance_;
    new (ptr) ::ascend::presenter::proto::PresentImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::PresentImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PresentImageResponse_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PresentImageResponse_presenter_5fmessage_2eproto}, {}};

static void InitDefaultsscc_info_Rectangle_Attr_presenter_5fmessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ascend::presenter::proto::_Rectangle_Attr_default_instance_;
    new (ptr) ::ascend::presenter::proto::Rectangle_Attr();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ascend::presenter::proto::Rectangle_Attr::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Rectangle_Attr_presenter_5fmessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Rectangle_Attr_presenter_5fmessage_2eproto}, {
      &scc_info_Coordinate_presenter_5fmessage_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_presenter_5fmessage_2eproto[7];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_presenter_5fmessage_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_presenter_5fmessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_presenter_5fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, channel_name_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelRequest, content_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, error_code_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::OpenChannelResponse, error_message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::HeartbeatMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, x_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Coordinate, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, left_top_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, right_bottom_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::Rectangle_Attr, label_text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, format_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, width_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, height_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, data_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageRequest, rectangle_list_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, error_code_),
  PROTOBUF_FIELD_OFFSET(::ascend::presenter::proto::PresentImageResponse, error_message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ascend::presenter::proto::OpenChannelRequest)},
  { 7, -1, sizeof(::ascend::presenter::proto::OpenChannelResponse)},
  { 14, -1, sizeof(::ascend::presenter::proto::HeartbeatMessage)},
  { 19, -1, sizeof(::ascend::presenter::proto::Coordinate)},
  { 26, -1, sizeof(::ascend::presenter::proto::Rectangle_Attr)},
  { 34, -1, sizeof(::ascend::presenter::proto::PresentImageRequest)},
  { 44, -1, sizeof(::ascend::presenter::proto::PresentImageResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_OpenChannelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_OpenChannelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_HeartbeatMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_Coordinate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_Rectangle_Attr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_PresentImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ascend::presenter::proto::_PresentImageResponse_default_instance_),
};

const char descriptor_table_protodef_presenter_5fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027presenter_message.proto\022\026ascend.presen"
  "ter.proto\"l\n\022OpenChannelRequest\022\024\n\014chann"
  "el_name\030\001 \001(\t\022@\n\014content_type\030\002 \001(\0162*.as"
  "cend.presenter.proto.ChannelContentType\""
  "n\n\023OpenChannelResponse\022@\n\nerror_code\030\001 \001"
  "(\0162,.ascend.presenter.proto.OpenChannelE"
  "rrorCode\022\025\n\rerror_message\030\002 \001(\t\"\022\n\020Heart"
  "beatMessage\"\"\n\nCoordinate\022\t\n\001x\030\001 \001(\r\022\t\n\001"
  "y\030\002 \001(\r\"\224\001\n\016Rectangle_Attr\0224\n\010left_top\030\001"
  " \001(\0132\".ascend.presenter.proto.Coordinate"
  "\0228\n\014right_bottom\030\002 \001(\0132\".ascend.presente"
  "r.proto.Coordinate\022\022\n\nlabel_text\030\003 \001(\t\"\267"
  "\001\n\023PresentImageRequest\0223\n\006format\030\001 \001(\0162#"
  ".ascend.presenter.proto.ImageFormat\022\r\n\005w"
  "idth\030\002 \001(\r\022\016\n\006height\030\003 \001(\r\022\014\n\004data\030\004 \001(\014"
  "\022>\n\016rectangle_list\030\005 \003(\0132&.ascend.presen"
  "ter.proto.Rectangle_Attr\"o\n\024PresentImage"
  "Response\022@\n\nerror_code\030\001 \001(\0162,.ascend.pr"
  "esenter.proto.PresentDataErrorCode\022\025\n\rer"
  "ror_message\030\002 \001(\t*\245\001\n\024OpenChannelErrorCo"
  "de\022\031\n\025kOpenChannelErrorNone\020\000\022\"\n\036kOpenCh"
  "annelErrorNoSuchChannel\020\001\022)\n%kOpenChanne"
  "lErrorChannelAlreadyOpened\020\002\022#\n\026kOpenCha"
  "nnelErrorOther\020\377\377\377\377\377\377\377\377\377\001*P\n\022ChannelCont"
  "entType\022\034\n\030kChannelContentTypeImage\020\000\022\034\n"
  "\030kChannelContentTypeVideo\020\001*#\n\013ImageForm"
  "at\022\024\n\020kImageFormatJpeg\020\000*\244\001\n\024PresentData"
  "ErrorCode\022\031\n\025kPresentDataErrorNone\020\000\022$\n "
  "kPresentDataErrorUnsupportedType\020\001\022&\n\"kP"
  "resentDataErrorUnsupportedFormat\020\002\022#\n\026kP"
  "resentDataErrorOther\020\377\377\377\377\377\377\377\377\377\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_presenter_5fmessage_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_presenter_5fmessage_2eproto_sccs[7] = {
  &scc_info_Coordinate_presenter_5fmessage_2eproto.base,
  &scc_info_HeartbeatMessage_presenter_5fmessage_2eproto.base,
  &scc_info_OpenChannelRequest_presenter_5fmessage_2eproto.base,
  &scc_info_OpenChannelResponse_presenter_5fmessage_2eproto.base,
  &scc_info_PresentImageRequest_presenter_5fmessage_2eproto.base,
  &scc_info_PresentImageResponse_presenter_5fmessage_2eproto.base,
  &scc_info_Rectangle_Attr_presenter_5fmessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_presenter_5fmessage_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_presenter_5fmessage_2eproto = {
  false, false, descriptor_table_protodef_presenter_5fmessage_2eproto, "presenter_message.proto", 1239,
  &descriptor_table_presenter_5fmessage_2eproto_once, descriptor_table_presenter_5fmessage_2eproto_sccs, descriptor_table_presenter_5fmessage_2eproto_deps, 7, 0,
  schemas, file_default_instances, TableStruct_presenter_5fmessage_2eproto::offsets,
  file_level_metadata_presenter_5fmessage_2eproto, 7, file_level_enum_descriptors_presenter_5fmessage_2eproto, file_level_service_descriptors_presenter_5fmessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_presenter_5fmessage_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_presenter_5fmessage_2eproto)), true);
namespace ascend {
namespace presenter {
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OpenChannelErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_presenter_5fmessage_2eproto);
  return file_level_enum_descriptors_presenter_5fmessage_2eproto[0];
}
bool OpenChannelErrorCode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ChannelContentType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_presenter_5fmessage_2eproto);
  return file_level_enum_descriptors_presenter_5fmessage_2eproto[1];
}
bool ChannelContentType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ImageFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_presenter_5fmessage_2eproto);
  return file_level_enum_descriptors_presenter_5fmessage_2eproto[2];
}
bool ImageFormat_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PresentDataErrorCode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_presenter_5fmessage_2eproto);
  return file_level_enum_descriptors_presenter_5fmessage_2eproto[3];
}
bool PresentDataErrorCode_IsValid(int value) {
  switch (value) {
    case -1:
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void OpenChannelRequest::InitAsDefaultInstance() {
}
class OpenChannelRequest::_Internal {
 public:
};

OpenChannelRequest::OpenChannelRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.OpenChannelRequest)
}
OpenChannelRequest::OpenChannelRequest(const OpenChannelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  channel_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel_name().empty()) {
    channel_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_channel_name(),
      GetArena());
  }
  content_type_ = from.content_type_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.OpenChannelRequest)
}

void OpenChannelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpenChannelRequest_presenter_5fmessage_2eproto.base);
  channel_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  content_type_ = 0;
}

OpenChannelRequest::~OpenChannelRequest() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.OpenChannelRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OpenChannelRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  channel_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OpenChannelRequest::ArenaDtor(void* object) {
  OpenChannelRequest* _this = reinterpret_cast< OpenChannelRequest* >(object);
  (void)_this;
}
void OpenChannelRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenChannelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenChannelRequest& OpenChannelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpenChannelRequest_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void OpenChannelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.OpenChannelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  content_type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenChannelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string channel_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_channel_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ascend.presenter.proto.OpenChannelRequest.channel_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ascend.presenter.proto.ChannelContentType content_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_content_type(static_cast<::ascend::presenter::proto::ChannelContentType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpenChannelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.OpenChannelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel_name().data(), static_cast<int>(this->_internal_channel_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelRequest.channel_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_channel_name(), target);
  }

  // .ascend.presenter.proto.ChannelContentType content_type = 2;
  if (this->content_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_content_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.OpenChannelRequest)
  return target;
}

size_t OpenChannelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.OpenChannelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string channel_name = 1;
  if (this->channel_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel_name());
  }

  // .ascend.presenter.proto.ChannelContentType content_type = 2;
  if (this->content_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_content_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenChannelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.OpenChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenChannelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpenChannelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.OpenChannelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.OpenChannelRequest)
    MergeFrom(*source);
  }
}

void OpenChannelRequest::MergeFrom(const OpenChannelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.OpenChannelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_name().size() > 0) {
    _internal_set_channel_name(from._internal_channel_name());
  }
  if (from.content_type() != 0) {
    _internal_set_content_type(from._internal_content_type());
  }
}

void OpenChannelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.OpenChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenChannelRequest::CopyFrom(const OpenChannelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.OpenChannelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenChannelRequest::IsInitialized() const {
  return true;
}

void OpenChannelRequest::InternalSwap(OpenChannelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  channel_name_.Swap(&other->channel_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(content_type_, other->content_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenChannelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OpenChannelResponse::InitAsDefaultInstance() {
}
class OpenChannelResponse::_Internal {
 public:
};

OpenChannelResponse::OpenChannelResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.OpenChannelResponse)
}
OpenChannelResponse::OpenChannelResponse(const OpenChannelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.OpenChannelResponse)
}

void OpenChannelResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OpenChannelResponse_presenter_5fmessage_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

OpenChannelResponse::~OpenChannelResponse() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.OpenChannelResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OpenChannelResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OpenChannelResponse::ArenaDtor(void* object) {
  OpenChannelResponse* _this = reinterpret_cast< OpenChannelResponse* >(object);
  (void)_this;
}
void OpenChannelResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OpenChannelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OpenChannelResponse& OpenChannelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OpenChannelResponse_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void OpenChannelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.OpenChannelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OpenChannelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::ascend::presenter::proto::OpenChannelErrorCode>(val));
        } else goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ascend.presenter.proto.OpenChannelResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OpenChannelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.OpenChannelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.OpenChannelResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.OpenChannelResponse)
  return target;
}

size_t OpenChannelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.OpenChannelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .ascend.presenter.proto.OpenChannelErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OpenChannelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.OpenChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const OpenChannelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OpenChannelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.OpenChannelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.OpenChannelResponse)
    MergeFrom(*source);
  }
}

void OpenChannelResponse::MergeFrom(const OpenChannelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.OpenChannelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void OpenChannelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.OpenChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpenChannelResponse::CopyFrom(const OpenChannelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.OpenChannelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpenChannelResponse::IsInitialized() const {
  return true;
}

void OpenChannelResponse::InternalSwap(OpenChannelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OpenChannelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HeartbeatMessage::InitAsDefaultInstance() {
}
class HeartbeatMessage::_Internal {
 public:
};

HeartbeatMessage::HeartbeatMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.HeartbeatMessage)
}
HeartbeatMessage::HeartbeatMessage(const HeartbeatMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.HeartbeatMessage)
}

void HeartbeatMessage::SharedCtor() {
}

HeartbeatMessage::~HeartbeatMessage() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.HeartbeatMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HeartbeatMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HeartbeatMessage::ArenaDtor(void* object) {
  HeartbeatMessage* _this = reinterpret_cast< HeartbeatMessage* >(object);
  (void)_this;
}
void HeartbeatMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HeartbeatMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HeartbeatMessage& HeartbeatMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HeartbeatMessage_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void HeartbeatMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.HeartbeatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HeartbeatMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HeartbeatMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.HeartbeatMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.HeartbeatMessage)
  return target;
}

size_t HeartbeatMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.HeartbeatMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.HeartbeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HeartbeatMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.HeartbeatMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.HeartbeatMessage)
    MergeFrom(*source);
  }
}

void HeartbeatMessage::MergeFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.HeartbeatMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HeartbeatMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatMessage::CopyFrom(const HeartbeatMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.HeartbeatMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatMessage::IsInitialized() const {
  return true;
}

void HeartbeatMessage::InternalSwap(HeartbeatMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HeartbeatMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Coordinate::InitAsDefaultInstance() {
}
class Coordinate::_Internal {
 public:
};

Coordinate::Coordinate(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.Coordinate)
}
Coordinate::Coordinate(const Coordinate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.Coordinate)
}

void Coordinate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.Coordinate)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Coordinate::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Coordinate::ArenaDtor(void* object) {
  Coordinate* _this = reinterpret_cast< Coordinate* >(object);
  (void)_this;
}
void Coordinate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Coordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Coordinate& Coordinate::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Coordinate_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.Coordinate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Coordinate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Coordinate::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.Coordinate)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_x(), target);
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.Coordinate)
  return target;
}

size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.Coordinate)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_x());
  }

  // uint32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_y());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coordinate::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinate* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Coordinate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.Coordinate)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from.y() != 0) {
    _internal_set_y(from._internal_y());
  }
}

void Coordinate::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {
  return true;
}

void Coordinate::InternalSwap(Coordinate* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Coordinate, y_)
      + sizeof(Coordinate::y_)
      - PROTOBUF_FIELD_OFFSET(Coordinate, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Coordinate::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Rectangle_Attr::InitAsDefaultInstance() {
  ::ascend::presenter::proto::_Rectangle_Attr_default_instance_._instance.get_mutable()->left_top_ = const_cast< ::ascend::presenter::proto::Coordinate*>(
      ::ascend::presenter::proto::Coordinate::internal_default_instance());
  ::ascend::presenter::proto::_Rectangle_Attr_default_instance_._instance.get_mutable()->right_bottom_ = const_cast< ::ascend::presenter::proto::Coordinate*>(
      ::ascend::presenter::proto::Coordinate::internal_default_instance());
}
class Rectangle_Attr::_Internal {
 public:
  static const ::ascend::presenter::proto::Coordinate& left_top(const Rectangle_Attr* msg);
  static const ::ascend::presenter::proto::Coordinate& right_bottom(const Rectangle_Attr* msg);
};

const ::ascend::presenter::proto::Coordinate&
Rectangle_Attr::_Internal::left_top(const Rectangle_Attr* msg) {
  return *msg->left_top_;
}
const ::ascend::presenter::proto::Coordinate&
Rectangle_Attr::_Internal::right_bottom(const Rectangle_Attr* msg) {
  return *msg->right_bottom_;
}
Rectangle_Attr::Rectangle_Attr(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.Rectangle_Attr)
}
Rectangle_Attr::Rectangle_Attr(const Rectangle_Attr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  label_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_label_text().empty()) {
    label_text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_label_text(),
      GetArena());
  }
  if (from._internal_has_left_top()) {
    left_top_ = new ::ascend::presenter::proto::Coordinate(*from.left_top_);
  } else {
    left_top_ = nullptr;
  }
  if (from._internal_has_right_bottom()) {
    right_bottom_ = new ::ascend::presenter::proto::Coordinate(*from.right_bottom_);
  } else {
    right_bottom_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.Rectangle_Attr)
}

void Rectangle_Attr::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Rectangle_Attr_presenter_5fmessage_2eproto.base);
  label_text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&left_top_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_bottom_) -
      reinterpret_cast<char*>(&left_top_)) + sizeof(right_bottom_));
}

Rectangle_Attr::~Rectangle_Attr() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.Rectangle_Attr)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Rectangle_Attr::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  label_text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete left_top_;
  if (this != internal_default_instance()) delete right_bottom_;
}

void Rectangle_Attr::ArenaDtor(void* object) {
  Rectangle_Attr* _this = reinterpret_cast< Rectangle_Attr* >(object);
  (void)_this;
}
void Rectangle_Attr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Rectangle_Attr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Rectangle_Attr& Rectangle_Attr::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Rectangle_Attr_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void Rectangle_Attr::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.Rectangle_Attr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  label_text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && left_top_ != nullptr) {
    delete left_top_;
  }
  left_top_ = nullptr;
  if (GetArena() == nullptr && right_bottom_ != nullptr) {
    delete right_bottom_;
  }
  right_bottom_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Rectangle_Attr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ascend.presenter.proto.Coordinate left_top = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_left_top(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ascend.presenter.proto.Coordinate right_bottom = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_right_bottom(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string label_text = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_label_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ascend.presenter.proto.Rectangle_Attr.label_text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Rectangle_Attr::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.Rectangle_Attr)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.Coordinate left_top = 1;
  if (this->has_left_top()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::left_top(this), target, stream);
  }

  // .ascend.presenter.proto.Coordinate right_bottom = 2;
  if (this->has_right_bottom()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::right_bottom(this), target, stream);
  }

  // string label_text = 3;
  if (this->label_text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label_text().data(), static_cast<int>(this->_internal_label_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.Rectangle_Attr.label_text");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_label_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.Rectangle_Attr)
  return target;
}

size_t Rectangle_Attr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.Rectangle_Attr)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string label_text = 3;
  if (this->label_text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label_text());
  }

  // .ascend.presenter.proto.Coordinate left_top = 1;
  if (this->has_left_top()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *left_top_);
  }

  // .ascend.presenter.proto.Coordinate right_bottom = 2;
  if (this->has_right_bottom()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *right_bottom_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Rectangle_Attr::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.Rectangle_Attr)
  GOOGLE_DCHECK_NE(&from, this);
  const Rectangle_Attr* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Rectangle_Attr>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.Rectangle_Attr)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.Rectangle_Attr)
    MergeFrom(*source);
  }
}

void Rectangle_Attr::MergeFrom(const Rectangle_Attr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.Rectangle_Attr)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.label_text().size() > 0) {
    _internal_set_label_text(from._internal_label_text());
  }
  if (from.has_left_top()) {
    _internal_mutable_left_top()->::ascend::presenter::proto::Coordinate::MergeFrom(from._internal_left_top());
  }
  if (from.has_right_bottom()) {
    _internal_mutable_right_bottom()->::ascend::presenter::proto::Coordinate::MergeFrom(from._internal_right_bottom());
  }
}

void Rectangle_Attr::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.Rectangle_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rectangle_Attr::CopyFrom(const Rectangle_Attr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.Rectangle_Attr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rectangle_Attr::IsInitialized() const {
  return true;
}

void Rectangle_Attr::InternalSwap(Rectangle_Attr* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  label_text_.Swap(&other->label_text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Rectangle_Attr, right_bottom_)
      + sizeof(Rectangle_Attr::right_bottom_)
      - PROTOBUF_FIELD_OFFSET(Rectangle_Attr, left_top_)>(
          reinterpret_cast<char*>(&left_top_),
          reinterpret_cast<char*>(&other->left_top_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Rectangle_Attr::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresentImageRequest::InitAsDefaultInstance() {
}
class PresentImageRequest::_Internal {
 public:
};

PresentImageRequest::PresentImageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  rectangle_list_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.PresentImageRequest)
}
PresentImageRequest::PresentImageRequest(const PresentImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      rectangle_list_(from.rectangle_list_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data().empty()) {
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_data(),
      GetArena());
  }
  ::memcpy(&format_, &from.format_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&format_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.PresentImageRequest)
}

void PresentImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresentImageRequest_presenter_5fmessage_2eproto.base);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&format_)) + sizeof(height_));
}

PresentImageRequest::~PresentImageRequest() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.PresentImageRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresentImageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresentImageRequest::ArenaDtor(void* object) {
  PresentImageRequest* _this = reinterpret_cast< PresentImageRequest* >(object);
  (void)_this;
}
void PresentImageRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresentImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresentImageRequest& PresentImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresentImageRequest_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void PresentImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.PresentImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rectangle_list_.Clear();
  data_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&format_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&format_)) + sizeof(height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresentImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ascend.presenter.proto.ImageFormat format = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_format(static_cast<::ascend::presenter::proto::ImageFormat>(val));
        } else goto handle_unusual;
        continue;
      // uint32 width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes data = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_rectangle_list(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresentImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.PresentImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.ImageFormat format = 1;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_format(), target);
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_width(), target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_height(), target);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_data(), target);
  }

  // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_rectangle_list_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_rectangle_list(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.PresentImageRequest)
  return target;
}

size_t PresentImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.PresentImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ascend.presenter.proto.Rectangle_Attr rectangle_list = 5;
  total_size += 1UL * this->_internal_rectangle_list_size();
  for (const auto& msg : this->rectangle_list_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes data = 4;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  // .ascend.presenter.proto.ImageFormat format = 1;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_format());
  }

  // uint32 width = 2;
  if (this->width() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_width());
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_height());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresentImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.PresentImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PresentImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresentImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.PresentImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.PresentImageRequest)
    MergeFrom(*source);
  }
}

void PresentImageRequest::MergeFrom(const PresentImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.PresentImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rectangle_list_.MergeFrom(from.rectangle_list_);
  if (from.data().size() > 0) {
    _internal_set_data(from._internal_data());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
  if (from.width() != 0) {
    _internal_set_width(from._internal_width());
  }
  if (from.height() != 0) {
    _internal_set_height(from._internal_height());
  }
}

void PresentImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.PresentImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresentImageRequest::CopyFrom(const PresentImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.PresentImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresentImageRequest::IsInitialized() const {
  return true;
}

void PresentImageRequest::InternalSwap(PresentImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rectangle_list_.InternalSwap(&other->rectangle_list_);
  data_.Swap(&other->data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PresentImageRequest, height_)
      + sizeof(PresentImageRequest::height_)
      - PROTOBUF_FIELD_OFFSET(PresentImageRequest, format_)>(
          reinterpret_cast<char*>(&format_),
          reinterpret_cast<char*>(&other->format_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PresentImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PresentImageResponse::InitAsDefaultInstance() {
}
class PresentImageResponse::_Internal {
 public:
};

PresentImageResponse::PresentImageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ascend.presenter.proto.PresentImageResponse)
}
PresentImageResponse::PresentImageResponse(const PresentImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error_message().empty()) {
    error_message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error_message(),
      GetArena());
  }
  error_code_ = from.error_code_;
  // @@protoc_insertion_point(copy_constructor:ascend.presenter.proto.PresentImageResponse)
}

void PresentImageResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PresentImageResponse_presenter_5fmessage_2eproto.base);
  error_message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
}

PresentImageResponse::~PresentImageResponse() {
  // @@protoc_insertion_point(destructor:ascend.presenter.proto.PresentImageResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PresentImageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PresentImageResponse::ArenaDtor(void* object) {
  PresentImageResponse* _this = reinterpret_cast< PresentImageResponse* >(object);
  (void)_this;
}
void PresentImageResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PresentImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PresentImageResponse& PresentImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PresentImageResponse_presenter_5fmessage_2eproto.base);
  return *internal_default_instance();
}


void PresentImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ascend.presenter.proto.PresentImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_message_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  error_code_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PresentImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_error_code(static_cast<::ascend::presenter::proto::PresentDataErrorCode>(val));
        } else goto handle_unusual;
        continue;
      // string error_message = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_error_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ascend.presenter.proto.PresentImageResponse.error_message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PresentImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ascend.presenter.proto.PresentImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_error_code(), target);
  }

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ascend.presenter.proto.PresentImageResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ascend.presenter.proto.PresentImageResponse)
  return target;
}

size_t PresentImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ascend.presenter.proto.PresentImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 2;
  if (this->error_message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  // .ascend.presenter.proto.PresentDataErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_error_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PresentImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ascend.presenter.proto.PresentImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PresentImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PresentImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ascend.presenter.proto.PresentImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ascend.presenter.proto.PresentImageResponse)
    MergeFrom(*source);
  }
}

void PresentImageResponse::MergeFrom(const PresentImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ascend.presenter.proto.PresentImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error_message().size() > 0) {
    _internal_set_error_message(from._internal_error_message());
  }
  if (from.error_code() != 0) {
    _internal_set_error_code(from._internal_error_code());
  }
}

void PresentImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ascend.presenter.proto.PresentImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PresentImageResponse::CopyFrom(const PresentImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ascend.presenter.proto.PresentImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PresentImageResponse::IsInitialized() const {
  return true;
}

void PresentImageResponse::InternalSwap(PresentImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_message_.Swap(&other->error_message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(error_code_, other->error_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PresentImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace presenter
}  // namespace ascend
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::OpenChannelRequest* Arena::CreateMaybeMessage< ::ascend::presenter::proto::OpenChannelRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::OpenChannelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::OpenChannelResponse* Arena::CreateMaybeMessage< ::ascend::presenter::proto::OpenChannelResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::OpenChannelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::HeartbeatMessage* Arena::CreateMaybeMessage< ::ascend::presenter::proto::HeartbeatMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::HeartbeatMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::Coordinate* Arena::CreateMaybeMessage< ::ascend::presenter::proto::Coordinate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::Coordinate >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::Rectangle_Attr* Arena::CreateMaybeMessage< ::ascend::presenter::proto::Rectangle_Attr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::Rectangle_Attr >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::PresentImageRequest* Arena::CreateMaybeMessage< ::ascend::presenter::proto::PresentImageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::PresentImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::ascend::presenter::proto::PresentImageResponse* Arena::CreateMaybeMessage< ::ascend::presenter::proto::PresentImageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ascend::presenter::proto::PresentImageResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
